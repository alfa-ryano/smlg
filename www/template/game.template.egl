<!DOCTYPE html>
<html>
<head>
<title>Map</title>

<link rel="stylesheet" type="text/css"
    href="js/bootstrap/css/bootstrap.css">
<link rel="stylesheet" type="text/css" href="css/smlg.css">

<script type="text/javascript" src="js/jquery-3.1.1.js"></script>
<script type="text/javascript" src="js/bootstrap/js/bootstrap.js"></script>
<script type="text/javascript">
	mxBasePath = 'grapheditor/mxlib';
</script>
<script type="text/javascript" src="grapheditor/mxlib/js/mxClient.js"></script>
<script type="text/javascript" src="smlg/smlg.utils.js"></script>
<script type="text/javascript" src="smlg/smlg.platform.js"></script>
<script type="text/javascript" src="smlg/smlg.map.js"></script>
</head>
<body>
    <%@include file='../../view/template/header.jsp'%>
    <div class="jumbotron">
        <div class="container">
            <h2 id="title"></h2>
        </div>
        <div id="map"></div>
    </div>
</body>

<script type="text/javascript">
    var gameName = getParameterByName("game");
    document.title = gameName;
    document.getElementById("title").innerHTML = gameName;
    var activities = new Object();
    var transitions = new Object();
    var inputModels = null;
    var outputModels = null;
    
    //ACTIVITIES
[%
    for(entity in eoml.entities){
        if (entity.type.name == "Activity") {
%]
    //--Activity [%=entity.name%]
    //----input models
    inputModels = [];
[%
            //Handle incoming edges
            for(edge in entity.incoming){
                if (edge.type.name == "Link"){
                    var link = edge;
                    //source model
                    if (link.source <> null and link.source.type.name == "Model"){
                        var myModel = link.source;
%]
    inputModels.push("[%= myModel.name %]"); 
[%                        
                    }
                }
            }
%]
    
    //----output models
    outputModels = [];
[%
            //Handle outgoing edges
            for(edge in entity.outgoing){
                if (edge.type.name == "Link"){
                    var link = edge;
                    //source model
                    if (link.target <> null and link.target.type.name == "Model"){
                        var myModel = link.target;
%]
    outputModels.push("[%= myModel.name %]"); 
[%                        
                    }
                }
            }
%] 
    //----activity
    activities["[%=entity.id%]"] = {'name': '[%= entity.name %]', 'metamodel': '[%= entity.metamodel %]', 
        'inputModels': inputModels, 'outputModels': outputModels };
        
[%      }  
    }
%]

    //TRANSITIONS
[%
    for(entity in eoml.entities){
        if (entity.type.name == "Transition") {
%]
    transitions["[%= entity.id %]"] = {"source": "[%= entity.source.id %]", "target": "[%= entity.target.id %]"}; 
[%      }  
    }
%]
    
    drawMap(activities, transitions);
</script>
</html>
[%
    TemplateFactory.setOutputRoot(path);
    var t: Template;
    
    for(entity in eoml.entities){
        //Handle Model
        if (entity.type.name == "Model"){
            var myModel = entity;
            if(myModel.sourceModel == null or myModel.sourceModel.trim() == ""){
                t = TemplateFactory.load("../template/model.template.xmi");
            } else {
                t = TemplateFactory.load("../modelling/" + myModel.metamodel + "/" + myModel.sourceModel + "/model.xmi");
            }
            t.generate(myModel.name + ".xmi");
            
            if(myModel.sourceModel == null or myModel.sourceModel.trim() == ""){
                t = TemplateFactory.load("../template/mxgraph.template.xml");
            } else {
                t = TemplateFactory.load("../modelling/" + myModel.metamodel + "/" + myModel.sourceModel + "/mxgraph.xml");    
            }
            t.generate(myModel.name + ".xml");
        }
        //Handle Activity
        if (entity.type.name == "Activity") {
            t = TemplateFactory.load("../template/description.template.txt");
            t.populate("activity", entity);
            t.generate(entity.name + "/description.txt");
            
            t = TemplateFactory.load("../template/mxgraph.template.xml");
            t.populate("activity", entity);
            t.generate(entity.name + "/mxgraph.xml");
            
            //Generate input models
            t = TemplateFactory.load("../template/models.in.template.egl");
            t.populate("activity", entity);
            t.generate(entity.name + "/models.in.js");
            
            //Generate input models
            t = TemplateFactory.load("../template/models.out.template.egl");
            t.populate("activity", entity);
            t.generate(entity.name + "/models.out.js");
            
            //Generate EVL objectives
            t = TemplateFactory.load("../template/objectives.template.egl");
            t.populate("activity", entity);
            t.generate(entity.name + "/objectives.evl");
        }  
    }
%]