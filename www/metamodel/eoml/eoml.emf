@namespace(uri="eoml", prefix="eoml")
package eoml;

@gmf.diagram
class EOML {
  val Entity[*] entities;
}

abstract class Entity {
  attr String name;
  attr String description;
}


abstract class Node extends Entity {
  ref Transition[*]#source outgoing;
  ref Transition[*]#target incoming;
}

@gmf.link(source="source", target="target", mxLabel="", mxEndArrow="classic", mxBlockendFill="1", mxEndSize="6", mxHtml="1", mxWidth="120", mxHeight="120")
class Transition extends Entity {
  ref Node#outgoing source;
  ref Node#incoming target;
}

@gmf.node(mxLabel="", mxHtml="1", mxWhiteSpace="wrap", mxRounded="1", mxWidth="480", mxHeight="240")
class EducationalObjective extends Node {

  @gmf.compartment(mxForm="swimlane", mxWiteSpace="wrap", mxHtml="1", mxCollapsible="1", mxResizeParent="1", mxResizeLast="1")
  ref Entity[*] entities;
}


@gmf.node(mxLabel="", mxHtml="1", mxWhiteSpace="wrap", mxRounded="1", mxWidth="240", mxHeight="120")
class LearningActivity extends Node {

  @gmf.compartment(mxForm="swimlane", mxWiteSpace="wrap", mxHtml="1", mxCollapsible="1", mxResizeParent="1", mxResizeLast="1")
  ref ActivityObjective[*] objectives;
}

@gmf.node(mxLabel="", mxHtml="1", mxShape="plus", mxWidth="30", mxHeight="30")
class ActivityObjective extends Entity {
}


@Ecore(constraints="constraintNoIncoming")
@gmf.node(mxLabel="", mxForm="ellipse", mxWhiteSpace="wrap", mxHtml="1", mxFillColor="#000000", mxWidth="30", mxHeight="30")
class StartNode extends Node {
}

@Ecore(constraints="constraintNoOutgoing")
@gmf.node(mxLabel="", mxForm="ellipse", mxWhiteSpace="wrap", mxHtml="1", mxFillColor="#FFFFFF", mxWidth="30", mxHeight="30")
class EndNode extends Node {
}
