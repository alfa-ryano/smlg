[%
    var name = "SMLGAdd" + metamodel.name.firstToUpperCase() + "Palette"; 
%]
function SMLGInit(editorUI) {
    /**
     * Adds the general filesystem to the sidebar.
     */
    editorUI.sidebar.[%=name%] = function(expand) {
        var fns = [
		[% for (eClassifier in metamodel.eClassifiers){ %]	    
		     [% var superClass = EClassifier.all
		              .select(c | c = eClassifier.eSuperTypes.first()).first();
		         %]
		       [% if (superClass <> null) { %]
		         [% for (eAnnotation in superClass.eAnnotations) { %] 
                              [% if (eAnnotation.source="gmf.node") { %]                    
         this.createVertexTemplateEntry('whiteSpace=wrap;html=1;', 60, 60, 
           '[%=eClassifier.name%]', '[%=eClassifier.name.firstToUpperCase()%]', null, null, null),                          
                    [% }  %]
                      
                      [% } %]
		         
		         
		          [% for (eStructuralFeature in superClass.eStructuralFeatures) { %]
		              [% for (eAnnotation in eStructuralFeature.eAnnotations) { %]    
		                      [% if (eAnnotation.source="gmf.compartment") { %]
         this.createVertexTemplateEntry('swimlane;whiteSpace=wrap;html=1;', 200, 200, 
         '[%=eClassifier.name%]', '[%=eClassifier.name.firstToUpperCase()%]', null, null, 'container swimlane lane pool'),
                        [% } %]
		              
		              [% } %]
		          [% } %]
		       [% } %]		    
		    [% if (eClassifier.eSuperTypes.first() <> null) { %]
		    [% } else { %]		    
			    [% for (eAnnotation in eClassifier.eAnnotations) { %]
			        [% if (eAnnotation.source="gmf.diagram") { %]
			        [% } else if (eAnnotation.source="gmf.link") { %]
			             [% var styleString : String  := "";
                         var style := null;
                         var width := null;
                         var targetDecoration = null;                          
                         for (detail in eAnnotation.details) { 
                              if (detail.key = "style"){
                                style := detail.value;  
                              } else if (detail.key = "width"){
                                width := detail.value;
                              } else if (detail.key = "targetDecoration"){
                                targetDecoration := detail.value;
                              }
                         }                        
                         if (style = "dot"){
                           styleString := styleString + "dashed=1;dashPattern=1 4;"; 
                         }                           
                         if (width <> null){
                            styleString := styleString + "html=" + width + ";";
                         }                 
                         if (targetDecoration = "arrow"){
                             styleString := styleString + "endArrow=classic;";
                         }else {
                            styleString := styleString + "endArrow=none;";
                         }%]		                 
         this.createEdgeTemplateEntry('[%=styleString%]', 50, 50, '', 'Sync'),		                 
			        [% } else if (eAnnotation.source="gmf.node") { %]	                
	     this.createVertexTemplateEntry('whiteSpace=wrap;html=1;', 60, 60, 
	       '[%=eClassifier.name%]', '[%=eClassifier.name.firstToUpperCase()%]', null, null, null),    	                    
	                [% } else { %]	                
	                [% } %]
			    [% } %]			          
			[% } %]					
			 [% for (eStructuralFeature in eClassifier.eStructuralFeatures) { %]
	               [% for (eAnnotation in eStructuralFeature.eAnnotations) { %]
		                [% if (eAnnotation.source="gmf.compartment") { %]
         this.createVertexTemplateEntry('swimlane;whiteSpace=wrap;html=1;', 200, 200, 
	     '[%=eClassifier.name%]', '[%=eClassifier.name.firstToUpperCase()%]', null, null, 'container swimlane lane pool'),
		                [% } else if (eAnnotation.source="gmf.link") { %]
         this.createEdgeTemplateEntry('endArrow=classic;html=1;', 50, 50, 
	     '', 'Target'),
		                [% } %]
	                [% } %]
             [% } %]			    
		[% } %]
    ]
        this.addPaletteFunctions('[%=metamodel.name%]', '[%=metamodel.name.firstToUpperCase()%]', (expand != null) ? expand : true, fns);
    }
    editorUI.sidebar.[%=name%](true);
    console.log("End of [%=metamodel.name%].js");
}
[% "Finish!".println(); %]