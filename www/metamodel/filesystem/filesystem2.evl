context Filesystem {   
  // At least there is an node with name button
  constraint objective_01 {
    check : 
        self.evaluationFunction_01()
    message : 
        "At least one node named 'button' must exist"
  }
} 

operation Filesystem evaluationFunction_01(): Boolean{
    /*if (self.nodes.size() > 0){  
        for (node in self.nodes){
            if (node.name = "button"){
            return true;
            }
        }
    }*/
    return false;
}

context File {
  constraint HasName {
      check : self.name.isDefined()
      message : 'Unnamed ' + self.eClass().name + ' not allowed'
  }
}

context Folder {
  critique NameStartsWithCapital {
      guard : self.satisfies('HasName')
      check : self.name.firstToUpperCase() = self.name
      message : 'Folder ' + self.name +
          ' should start with an upper-case letter'
      fix {
          title : 'Rename to ' + self.name.firstToUpperCase()
          do {
              self.name := self.name.firstToUpperCase();
          }
      }
  }
}

context Sync {
  constraint MustLinkSame {
      check : self.source.eClass() = self.target.eClass()
      message : 'Cannot synchronize a ' + self.source.eClass().name
          + ' with a ' + self.target.eClass().name
      fix {
          title : 'Synchronize with another ' +
              self.source.eClass().name
          do {
              var target := UserInput.choose('Select target',
                  _Model.getAllOfType(self.source.eClass().name));
              if (target.isDefined()) self.target := target;
          }
      }
  }
}

